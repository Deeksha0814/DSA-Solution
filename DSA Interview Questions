Q1) Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


#include <iostream>
using namespace std;

int main(){
	long long sum = 0;  // defining a variable sum for storing the sum
	long long a = 1, b = 2;   // variable a and b are storing the first 2 terms of fib series
	
	
	// In while loop : I am checking that my "a" variable value (fib term) is exceeding 4 million or not. In case it exceed it will stop the while loop as condition will become false.
	
	while(a < 4000000){   
		if(a % 2 == 0){
		    // checking the fib sequence value is even or not. 			
			sum += a;    // If it's even then add it to the sum variable.
		}
		long long next = a + b;  // Calculating the next term of fib series
		a = b;             // storing the "b" variable value in "a" variable
		b = next;          // storing the next fib value in "b" variable
	}
	
	
	// Once it comes out of loop. Print the value of sum.
	cout<< "Sum of even terms in fib series upto 4 million: " << sum << endl;
}



Q2. How many prime numbers exist in the Fibonacci sequence up to 100 , and what is their sum?

#include <iostream>
#include <cmath>
using namespace std;

// isPrime function is defined for checking if the current fib value is prime or not.

bool isPrime(int num){
	if(num < 2){
		// Numbers smaller than 2 are not prime.
		return false;
	}
	
	// looping the variable from i=2 to i=sqrt(num) as there is no need to go till num. cause when we divide num by i we will get the other divisor. So need to extend the loop till num. 
	for(int i=2;i<=sqrt(num);i++){
		// checking it number is having any divisor or not. 
		// If num%i == 0. This means it has divisors more than 2. Which means it's not a prime number. return false.
		if(num%i==0)	return false;
	} 
	
	// If it exits from upper loop means this number is prime number. So return true.
	return true;
}
 
int main(){
	// variable "a" and "b" are storing first two values of fib series. Varibale "next" will store the next fib series value. Variable "count" and "sum" is used for storing sum of the prime numbers and count for counting the number of prime numbers. 
	int a = 1, b = 2, next = 0, count = 0, sum = 0;
	
	// While loop will check if current fib value is exceeding 100 or not
	while(a<=100){
	
		// checking if current value is prime or not.
		if (isPrime(a)){
		
			// if it's prime then add it to "sum" variable to store the sum of all the prime numbers.
			sum += a;
			count++;   // increase the count of prime numbers
		}
		next = a+b;     // calculating next term in fib series
		a=b;            // storing "b" variable value in "a" value
		b=next;         // storing "next" variable value in b
	}
	
	
	// Printing the output
	cout<< "Number of prime numbers: "<< count <<endl;
	cout<< "Sum of prime numbers: "<< sum << endl;
}
